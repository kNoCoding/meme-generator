=============================================================
NEW TODO
=============================================================

    DUE 04122023 0830:
        - stick the footer to the bottom
        - put the buttons in a grid
        - put the meme beside the  controls
        - seperate gallery and editor and memes
        - create about section - gonna be a modal
        - hide the disabled buttons (?)
        - implement delete
        - put the incons in the buttons - line up line down

    TODO - DUE 02122023 2100 - 
        - project overdue, finish whenever 

    MAIN TASKS:
        16.5) FIX THE ENTIRE CODES MVC AND GROUPING IN THE FILES
        17) Draw a frame around the selected line (so the user can see which line is
        selected)
        18) Use a single set of control-boxes to handle all the different lines

=============================================================
IN PROGRESS
=============================================================

    URGENT: 
        - stick the footer to the bottom
        - put the buttons in the grid
        - put the meme beside the the controls
        - seperate gallery and editor and memes
        - create about section - gonna be a modal
        - hide the disabled buttons (?)
        - put the incons in the buttons line up line down
        
=============================================================
DONE
=============================================================

    Phase1 – basic flow (~4-8 hours)

        1) Build an initial home page (index.html, main.js, main.css)
            a) Create an empty section for the gallery and for the editor
        2) Commit and Push to Github, setup Github pages
        3) Create a memeController, code a function renderMeme() that renders an image on the canvas and a line of text on top
        4) Add a memeService with a gMeme variable and a function getMeme(), the function renderMeme() can now render that meme
        5) Add a text input and when it changed by the user –
            a) update the gMeme using the memeService function setLineTxt()
            b) then renderMeme()
        6) Create a galleryController, with a renderGallery presenting two images.
        7) onImageClick – call the memeService's setImg() and then renderMeme()
        8) Commit and Push
        9) Try your app from mobile


    Phase2 – download meme:

        10) Add a download link


    Phase3 – add line operations:

        11) Add a color picker button
        11.5) Add a stroke picker
        12) Add the button “increase/decrease” font


    Phase4 – multiple lines:

        13) Add (to gMeme) a second line in the canvas
        14) Render the lines on the canvas
        15) Add the button “add line”

        *******THIS "SMALL" mistake COST ME ~5.5 hours :)*******
            SERIOUS STUFF I GOT MYSELF INTO ㄟ( ▔, ▔ )ㄏ
                - complete the saveMeme()
                    - in the controller
                    - in the model
                ++THIS RAISES A HUGE PROBLEM FML++
        i will have to change the MEMES_STORAGE_KEY to be a IMG_STORAGE_KEY because they are simple images at this state. this means quite a refactor..
        *******THIS "SMALL" mistake COST ME ~5.5 hours :)*******


    BUGS FIXED:
        - when uploading an image it appears in the canvas with the default text but the text doesnt appear in the text changer. i think the issue is that the image is not beign added to the gallery. 


NEW DONE - DUE 04122023 0830 - 
    - create css structure
    - edit the header 
    - change the onchange on the color pickers to oninput
    - fix bug when on image upload image doesnt appear in canvas

    16) Add the button “switch line”, that switches the selected line

    - implement delete